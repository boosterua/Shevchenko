accounts.insert=INSERT INTO accounts (number, is_blocked, client_id) VALUES(?, ?, ?);
accounts.isBlocked=SELECT is_blocked FROM accounts WHERE id_account = (?);
accounts.getById=SELECT * FROM accounts WHERE id_account = (?);
accounts.setblock=UPDATE accounts SET is_blocked = (?) WHERE id_account = (?);
accounts.deleteById=DELETE FROM accounts WHERE id_account = (?);
accounts.update=UPDATE accounts SET number=(?), is_blocked=(?), client_id=(?), balance=(?)  WHERE id_account=(?);
accounts.getByClient=SELECT * FROM accounts WHERE client_id = (?);
accounts.getMaxByNumLike=SELECT MAX(number) FROM accounts WHERE number LIKE ?;



cards.insert=INSERT INTO cards (number, exp_date, fee_id, account_id) VALUES (?, ?, ?, ?);
cards.getByCardNumber = SELECT * from cards WHERE number = (?);
cards.getById = SELECT * from cards WHERE id = (?);


transactions.insert=INSERT INTO transactions (id_trans, cr_account, amount, date, description, account_id) VALUES (?,?,?,?,?,?);


clients.checkLoginPwd=SELECT id_client FROM clients WHERE (email=? AND password=?);
clients.getByRole=SELECT id_client, name, email, password, role FROM clients WHERE role=(?); 
clients.insert = INSERT INTO clients (name, email, password, role) VALUES (?, ?, ?, ?);
clients.getClientsOfCertainFeeType=SELECT * FROM clients WHERE id_client IN (select client_id FROM accounts WHERE id_account IN (SELECT account_id FROM cards WHERE fee_id=1) );


fees.getAll = SELECT id_fee, name, trans_fee, newcard_fee, apr FROM fees;
